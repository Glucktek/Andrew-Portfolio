---
import { type CollectionEntry, getCollection, render } from "astro:content";

// layout
import BaseLayout from "@layouts/BaseLayout.astro";

// components
import ProjectCard from "@/components/projects/ProjectCard.astro";
import FilterButton from "@components/button/FilterButton.astro";

// utils
import { filterCollectionByLanguage } from "@js/localeUtils";
import { getLocaleFromUrl } from "@js/localeUtils";

const currLocale = getLocaleFromUrl(Astro.url);

const projects = await getCollection("projects", ({ data }) => {
  // filter out draft projects
  return data.draft !== true;
});
const filteredProjects = filterCollectionByLanguage(projects, currLocale);
const sortedProjects = filteredProjects.sort(
  (a, b) => (a.data.order ?? Infinity) - (b.data.order ?? Infinity),
);

// Get unique technologies from all projects
const allTechnologies = [
  ...new Set(projects.flatMap((project) => project.data.technologies)),
].sort();
---

<BaseLayout
  title="My projects"
  description="Learn from my projects about web development, design, and more."
>
  <div class="site-container mt-24 pb-24 md:mt-36">
    <!-- Header -->
    <div class="mx-auto mb-16 max-w-7xl">
      <div class="text-center">
        <h1 class="h2 mb-4">Projects</h1>
        <p class="description opacity-80 lg:text-xl">
          Explore my projects and learn about my development journey
        </p>
      </div>
    </div>

    <!-- Technology Filters (temporarily disabled)
    <div class="mx-auto mb-12 max-w-5xl">
      <div class="bg-base-100 dark:bg-base-900 rounded-2xl p-6">
        <h2 class="mb-4 text-lg font-bold">Filter by Technology</h2>
        <div class="flex flex-wrap gap-2">
          <FilterButton
            text="All"
            class="tech-filter"
            data-tech="all"
            aria-pressed="true"
          />
          {
            allTechnologies.map((tech) => (
              <FilterButton
                text={tech}
                class="tech-filter"
                data-tech={tech}
                aria-pressed="false"
              />
            ))
          }
        </div>
      </div>
    </div>
    -->

    <!-- Projects grid -->
    <div class="projects-wrapper mt-8 mb-auto w-full animate-[height]">
      <div class="projects-grid grid gap-8 md:grid-cols-2 lg:grid-cols-3">
        {
          sortedProjects.map((project) => (
            <div
              class="project-item grid opacity-0"
              data-technologies={JSON.stringify(project.data.technologies)}
            >
              <ProjectCard project={project} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  import anime from "animejs";

  const setupProjectsFiltering = () => {
    const projectItems = document.querySelectorAll(
      ".project-item",
    ) as NodeListOf<HTMLElement>;

    // Initial animation only (filters disabled)
    anime({
      targets: ".project-item",
      opacity: [0, 1],
      translateY: [20, 0],
      duration: 800,
      delay: anime.stagger(50),
      easing: "easeOutExpo",
    });
  };

  // runs on initial page load
  setupProjectsFiltering();

  // runs on view transitions navigation
  document.addEventListener("astro:after-swap", setupProjectsFiltering);
</script>
